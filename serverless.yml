service: serverless-email-scheduler

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: dev
  # change this to use your own profile (https://serverless.com/framework/docs/providers/aws/guide/credentials#using-aws-profiles)
  profile: winterwind_serverless_deployer
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource:
        - Ref: TaskSchedulingStateMachine
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: arn:aws:ses:#{AWS::Region}:#{AWS::AccountId}:identity/${self:custom.EMAIL_SENDER_ADDRESS}

custom:
  EMAIL_SENDER_ADDRESS: "paul@winterwindsoftware.com"

package:
  individually: true

functions:
  ScheduleTask:
    handler: src/lambdas/schedule-task.handle
    environment:
      STATEMACHINE_ARN: ${self:resources.Outputs.TaskSchedulingStateMachine.Value}
  TriggerTask:
    handler: src/lambdas/trigger-task.handle
    environment:
      EMAIL_SENDER_ADDRESS: ${self:custom.EMAIL_SENDER_ADDRESS}

stepFunctions:
  stateMachines:
    TaskSchedulingStateMachine:
      name: TaskSchedulingStateMachine
      definition:
        Comment: "Schedules a task to be completed at a future date"
        StartAt: WaitForDueDate
        States:
          WaitForDueDate:
            Type: Wait
            TimestampPath: "$.dueDate"
            Next: TriggerTask
          TriggerTask:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-TriggerTask"
            End: true

resources:
  Outputs:
    TaskSchedulingStateMachine:
      Description: The ARN of the TaskSchedulingStateMachine
      Value:
        Ref: TaskSchedulingStateMachine

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-webpack # to keep package size low
